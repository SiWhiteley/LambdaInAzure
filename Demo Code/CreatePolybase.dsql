--Create a master key to enable encryption
CREATE MASTER KEY

--Create a credential file for your users
DROP DATABASE SCOPED CREDENTIAL AzureStorageCredential;
CREATE DATABASE SCOPED CREDENTIAL AzureStorageCredential
WITH
    IDENTITY = '<ApplicationId>@<oauthEndpoint>',
    SECRET = '<ApplicationKey>';

--Create a data source that uses the credentials to connect to ADLS
DROP EXTERNAL DATA SOURCE DataLake;
CREATE EXTERNAL DATA SOURCE DataLake
WITH (
    TYPE = HADOOP,
    LOCATION = 'adl://<lakename>.azuredatalakestore.net',
    CREDENTIAL = AzureStorageCredential
);

--Tell Polybase how to read the files it finds
DROP EXTERNAL FILE FORMAT CSVFile;
CREATE EXTERNAL FILE FORMAT CSVFile
WITH (
    FORMAT_TYPE = DelimitedText,
    FORMAT_OPTIONS (FIELD_TERMINATOR = ',', STRING_DELIMITER = '"')
);

--Finally, create our polybase table over the current active file
DROP EXTERNAL TABLE dbo.SpeedLayer
CREATE EXTERNAL TABLE dbo.SpeedLayer
	(
            SalesOrderNumber nvarchar(50),
            ProductKey int,
            ProductName nvarchar(50),
            OrderDateKey int,
            OrderQuantity int,
            UnitPrice decimal,
            DiscountAmount decimal,
            SalesAmount decimal,
            TaxAmt decimal
	)
WITH (
    LOCATION='<Current Streaming File>',
    DATA_SOURCE=DataLake,
    FILE_FORMAT=CSVFile,
	REJECT_TYPE=Value,
	REJECT_VALUE=1
);


--You should now be able to query the batch table and speed file directly
SELECT SUM(SalesAmount)
FROM
	(
		SELECT SUM(SalesAmount) SalesAmount
		FROM dbo.BatchLayer
		UNION
		SELECT SUM(SalesAmount) SalesAmount
		FROM dbo.SpeedLayer
		GROUP BY ProductName
	) Served
